<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="4" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-10T17:42:52Z" name="Default suite" finished-at="2023-08-10T17:42:53Z" duration-ms="1026">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-08-10T17:42:52Z" name="Default test" finished-at="2023-08-10T17:42:53Z" duration-ms="1026">
      <class name="testRunner.TestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:52Z" name="setUpClass" finished-at="2023-08-10T17:42:53Z" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="130" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Initializing rover with valid cardinal compass point and coordinates"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Initializing rover with valid cardinal compass point and coordinates"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Initializing rover with valid cardinal compass point and coordinates"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Initializing rover with valid cardinal compass point and coordinates"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="12" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Moving rover and verifying new position"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Speak in Mars language, please!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Speak in Mars language, please!
at marsrover.Rover.process(Rover.java:61)
at marsrover.Rover.process(Rover.java:49)
at stepDefinitions.RoverPositioningSteps.theRoverMovesWithThe(RoverPositioningSteps.java:41)
at ✽.the rover receive with the "<command>"(src/test/java/features/roverPositioning.feature:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="7" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Moving rover and verifying new position"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Speak in Mars language, please!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Speak in Mars language, please!
at marsrover.Rover.process(Rover.java:61)
at marsrover.Rover.process(Rover.java:49)
at stepDefinitions.RoverPositioningSteps.theRoverMovesWithThe(RoverPositioningSteps.java:41)
at ✽.the rover receive with the "<command>"(src/test/java/features/roverPositioning.feature:33)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="5" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Moving rover and verifying new position with invalid command"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Speak in Mars language, please!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Speak in Mars language, please!
at marsrover.Rover.process(Rover.java:61)
at marsrover.Rover.process(Rover.java:49)
at stepDefinitions.RoverPositioningSteps.theRoverMovesWithThe(RoverPositioningSteps.java:41)
at ✽.the rover receive with the "<command>"(src/test/java/features/roverPositioning.feature:44)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="9" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Moving rover and verifying new position with invalid command"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Speak in Mars language, please!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Speak in Mars language, please!
at marsrover.Rover.process(Rover.java:61)
at marsrover.Rover.process(Rover.java:49)
at stepDefinitions.RoverPositioningSteps.theRoverMovesWithThe(RoverPositioningSteps.java:41)
at ✽.the rover receive with the "<command>"(src/test/java/features/roverPositioning.feature:44)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-08-10T17:42:53Z" duration-ms="4" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Moving rover and verifying new position with invalid command"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Rover Direction and Position Initialization"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Speak in Mars language, please!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Speak in Mars language, please!
at marsrover.Rover.process(Rover.java:61)
at marsrover.Rover.process(Rover.java:49)
at stepDefinitions.RoverPositioningSteps.theRoverMovesWithThe(RoverPositioningSteps.java:41)
at ✽.the rover receive with the "<command>"(src/test/java/features/roverPositioning.feature:44)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:testRunner.TestRunner@1efe439d]" started-at="2023-08-10T17:42:53Z" name="tearDownClass" finished-at="2023-08-10T17:42:53Z" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- testRunner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
